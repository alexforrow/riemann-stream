#!/usr/bin/env node

/*!
 * riemann-string: very simple riemann event streamer
 * Inspired by wscat
 * Copyright(c) 2015 Alex Forrow <alex.forrow@datasift.com>
 * MIT Licensed
 */

var program = require('commander'),
    WebSocket = require('ws'),
    prettyjson = require('prettyjson');

/**
 * The actual application
 */
var version = require('../package.json').version;

program
  .version(version)
  .usage('[options] <url>')  
  .option('-q, --query <url>', 'Riemann query to subscribe to [true]', 'true')
  .option('-h --host <host>', 'optional host')
  .option('-p --port <port>', 'optional port [5556]', 5556)
  .parse(process.argv);

/* Determine host. Precedence
 * 1. cli arg
 * 2. environment variable
 * 3. localhost
 */
host = program.host || process.env.RIEMANN_HOST || 'localhost'
url = 'ws://' + host + ':' + program.port + '/index?subscribe=true&query=' + encodeURI(program.query)

console.log("Riemann query: " + program.query);
console.log("Connecting to: " + url);

var ws = new WebSocket(url);

ws.on('open', function open() {
  console.log('connected (press Ctrl+C to quit');
}).on('close', function close() {
  console.log('disconnected');
  process.exit();
}).on('error', function error(code, description) {
  console.error('error: ' + code + (description ? ' ' + description : ''));
  process.exit(-1);
}).on('message', function message(data, flags) {
  console.log(prettyjson.render(JSON.parse(data)));
  console.log();
});
